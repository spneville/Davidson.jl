var documenterSearchIndex = {"docs":
[{"location":"matvec/#matvec","page":"Matrix-Vector Multiplication","title":"Matrix-Vector Multiplication","text":"","category":"section"},{"location":"matvec/","page":"Matrix-Vector Multiplication","title":"Matrix-Vector Multiplication","text":"This section details the required form of the matrix-vector multiplication function...","category":"page"},{"location":"solver/#solver","page":"solver","title":"solver","text":"","category":"section"},{"location":"solver/","page":"solver","title":"solver","text":"This section details the use of the solver function, which computes a given number of the lowest-lying eigenpairs of a given matrix A in a 'matrix-free' manner. That is, only a function returning matrix-vector products is required as input, as opposed to the matrix itself.","category":"page"},{"location":"solver/#Davidson.solver","page":"solver","title":"Davidson.solver","text":"solver(f, diag, nroots, matdim; tol=1e-4, blocksize=nroots+5,\n       maxvec=4*blocksize, niter=100, verbose=false)\n\nArguments\n\nf::Function: In-place matrix-vector multiplication function\ndiag::Matrix{T}: Diagonal of the matrix whose eigenpairs are sought\nnroots::Int64: Number of eigenpairs to compute\nmatdim::Int64: Dimension of the matrix\n\nOptional keyword arguments\n\ntol::Float64: Residual norm convergence threshold\nblocksize::Int64: Block size\nmaxvec::Int64: Maximum subspace dimension\nniter::Int64: Maximum number of iterations\nverbose::Bool: Verbose output flag. If true, then a summary is printed                  at the end of each iteration\n\nReturns\n\nvectors::Matrix{T}: Matrix of eigenvectors\nvalues::Vector{R}: Vector of eigenvalues\n\nA note on the matrix-vector multiplication function\n\nLet the matrix whose eigenpairs are sought be denoted by A. The in-place Function f recieves takes as arguments an AbstractMatrix of vectors ν and an AbstractMatrix of matrix-vector products Aν that is to be computed. The required form of this function is detailed in Matrix-Vector Multiplication section.\n\n\n\n\n\n","category":"function"},{"location":"#man-davidson","page":"Home","title":"Davidson.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia package implementing the Davidson algorithm for the calculation of the lowest-lying eigenpairs of large, sparse, diagonally dominant matrices.","category":"page"}]
}
